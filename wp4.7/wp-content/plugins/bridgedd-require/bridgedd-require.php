<?php
/*
Plugin Name: BridgeDD Requirement Check
Plugin URI: http://bridgedd.com
Version: 2.2
Author: Dion Designs
Author URI: http://forum.dion-designs.com
Description: Checks your WordPress installation for basic BridgeDD requirements
*/
if (!defined('WPINC')) { die('ERROR 000'); } function bridgedd_test_check_phpbb_path($phpbb_path) { global $msg; @include($phpbb_path . BDD_SEP . 'config.php'); if (empty($dbms)) { return sprintf($msg, '#b33', __('FAIL', 'bridgedd-require') . ' (include)'); } else if (strpos($dbms, 'mysql') === false) { return sprintf($msg, '#b33', __('FAIL', 'bridgedd-require') . ' (mysql)'); } else if (strpos($acm_type, 'file') === false) { return sprintf($msg, '#b33', __('FAIL', 'bridgedd-require') . ' (acm_type)'); } $err = ' (create)'; $testfile = $phpbb_path . BDD_SEP . 'bridgedd_test.html'; if (file_exists($testfile)) { return sprintf($msg, '#b33', __('FAIL', 'bridgedd-require') . $err); } @touch($testfile); clearstatcache(); if (!file_exists($testfile)) { return sprintf($msg, '#b33', __('FAIL', 'bridgedd-require') . $err); } @unlink($testfile); clearstatcache(); if (file_exists($testfile)) { return sprintf($msg, '#b33', __('FAIL', 'bridgedd-require') . $err); } $testfile = $phpbb_path . BDD_SEP . 'adm' . BDD_SEP . 'style' . BDD_SEP . 'overall_footer.html'; $test = @file_get_contents($testfile); if ($test) { @file_put_contents($testfile, $test . PHP_EOL); clearstatcache(); $test2 = @file_get_contents($testfile); if ($test2 == $test . PHP_EOL) { @file_put_contents($testfile, $test); clearstatcache(); return sprintf($msg, '#080', __('PASS', 'bridgedd-require')); } $err = ' (modify)'; } return sprintf($msg, '#b33', __('FAIL', 'bridgedd-require') . $err); } function bridgedd_test_run() { global $wp_version, $phpbb_path, $msg; if (!get_option('bridgedd_test')) { return; } if (!defined('BDD_SEP')) { define('BDD_SEP', (defined('DIRECTORY_SEPARATOR') && DIRECTORY_SEPARATOR != '') ? DIRECTORY_SEPARATOR : '/'); } if (!defined('SERVER_DOCUMENT_ROOT')) { define('SERVER_DOCUMENT_ROOT', substr(getenv('SCRIPT_FILENAME'), 0, strpos(getenv('SCRIPT_FILENAME'), getenv('SCRIPT_NAME')))); } define('BRIDGEDD_PATH', ABSPATH . 'bridgedd'); define('BRIDGEDD_TEST_FILE', BRIDGEDD_PATH . BDD_SEP . 'index.html'); load_plugin_textdomain('bridgedd-require', false, 'bridgedd-require/'); $bridgedd_error = ''; $msg = '<strong style="color:%1$s;font-size:1.1em">%2$s</strong>'; if (!function_exists('mysqli_connect')) { $bridgedd_error = __('BridgeDD requires the mysqli extension.', 'bridgedd-require'); } else if (version_compare(PHP_VERSION, '5.3.0', '<')) { $bridgedd_error = sprintf(__('BridgeDD requires PHP 5.3 or later. Your version: %s', 'bridgedd-require'), PHP_VERSION); } else if (version_compare($wp_version, '3.6', '<')) { $bridgedd_error = sprintf(__('BridgeDD requires WordPress 3.6 or later. Your version: %s', 'bridgedd-require'), $wp_version); } else if (is_multisite()) { $bridgedd_error = __('BridgeDD is not compatible with WordPress Multisite.', 'bridgedd-require'); } else if (extension_loaded('apc') && intval(@ini_get('apc.stat')) != 1) { $bridgedd_error = __('BridgeDD requires apc.stat set to "1".', 'bridgedd-require'); } else if (extension_loaded('eaccelerator') && intval(@ini_get('eaccelerator.check_mtime')) != 1) { $bridgedd_error = __('BridgeDD requires eaccelerator.check_mtime set to "1".', 'bridgedd-require'); } else if (extension_loaded('XCache') && in_array(@ini_get('xcache.stat'), array('', 0, 'Off'))) { $bridgedd_error = __('BridgeDD requires xcache.stat set to "On".', 'bridgedd-require'); } if (!$bridgedd_error) { $bridgedd_error = __('BridgeDD cannot create directories in WordPress.', 'bridgedd-require'); if (file_exists(BRIDGEDD_PATH . BDD_SEP . 'bridgedd.mod')) { $bridgedd_error = __('BridgeDD is already installed.', 'bridgedd-require'); } else if (!file_exists(BRIDGEDD_TEST_FILE)) { @mkdir(BRIDGEDD_PATH, 0775); @touch(BRIDGEDD_PATH . BDD_SEP . 'index.html'); clearstatcache(); if (file_exists(BRIDGEDD_TEST_FILE)) { @unlink(BRIDGEDD_TEST_FILE); @rmdir(BRIDGEDD_PATH); clearstatcache(); if (!file_exists(BRIDGEDD_PATH)) { $bridgedd_error = ''; } } } } if (!$bridgedd_error) { $path_ary = array(); $s = BDD_SEP; $check_file = "{$s}includes{$s}functions_privmsgs.php"; $check31_file = "{$s}phpbb{$s}error_collector.php"; $er = error_reporting(); error_reporting($er & ~E_WARNING & ~E_CORE_WARNING & ~E_USER_WARNING); if (file_exists(SERVER_DOCUMENT_ROOT . $check_file)) { $version = (file_exists(SERVER_DOCUMENT_ROOT . $check31_file)) ? '3.1' : '3.0'; $path_ary[] = array($version, SERVER_DOCUMENT_ROOT); } $glob1 = glob(SERVER_DOCUMENT_ROOT . "{$s}*", GLOB_ONLYDIR); if (!empty($glob1)) { foreach ($glob1 as $firstlev) { if (file_exists($firstlev . $check_file)) { $version = (file_exists($firstlev . $check31_file)) ? '3.1' : '3.0'; $path_ary[] = array($version, $firstlev); } else { $glob2 = glob($firstlev . "{$s}*", GLOB_ONLYDIR); if (!empty($glob2)) { foreach($glob2 as $secondlev) { if (file_exists($secondlev . $check_file)) { $version = (file_exists($secondlev . $check31_file)) ? '3.1' : '3.0'; $path_ary[] = array($version, $secondlev); } else { $glob3 = glob($secondlev . "{$s}*", GLOB_ONLYDIR); if (!empty($glob3)) { foreach($glob3 as $thirdlev) { if (file_exists($thirdlev . $check_file)) { $version = (file_exists($thirdlev . $check31_file)) ? '3.1' : '3.0'; $path_ary[] = array($version, $thirdlev); } } } } } } } } } error_reporting($er); if (empty($path_ary)) { $bridgedd_error = __('No phpBB installations were found on your server.', 'bridgedd-require'); } else { $phpbb_msg = ''; foreach ($path_ary as $path) { $local_path = str_replace(SERVER_DOCUMENT_ROOT, '', $path[1]); $phpbb_msg .= '<strong>' . $local_path . '</strong>&nbsp;(' . $path[0] . ')&nbsp;&nbsp;&nbsp;' . bridgedd_test_check_phpbb_path($path[1]) . '<br />'; } } } delete_option('bridgedd_test'); $active = get_option('active_plugins'); $key = array_search('bridgedd-require/bridgedd-require.php', $active); unset($active[$key]); update_option('active_plugins', $active); if ($bridgedd_error) { wp_die('<style type="text/css">#bdd_req{font-size:16px;line-height:24px}#error-page p, h2{margin:0}h2{color:#000;border:none;font-size:1.3em;font-weight:normal}.button{height:32px;line-height:32px;font-size:14px}</style> <div id="bdd_req" style="text-align:center"><h2>' . sprintf($msg, '#b33;', __('FAIL', 'bridgedd-require')) . '<br /><br />' . $bridgedd_error . '</h2> <br /><a class="button" href="plugins.php">' . sprintf($msg, '#00c;', sprintf(__('&larr; Back to %s'), __('Plugins'))) . '</strong></a></div>', __('BridgeDD Requirement Check', 'bridgedd-require')); } wp_die('<style type="text/css">#bdd_req{font-size:16px;line-height:24px}#error-page p, h2{margin:0}h2{color:#000;border:none;font-size:1.3em;font-weight:normal}h4{margin:0;font-size:0.9em;font-weight:normal}.button{height:32px;line-height:32px;font-size:14px}</style><div id="bdd_req"> <h2>' . sprintf(__('BridgeDD basic requirements: %s', 'bridgedd-require'), sprintf($msg, '#080', __('PASS', 'bridgedd-require'))) . '</h2> <br /><h2>' . __('phpBB Installation Check', 'bridgedd-require') . '</h2><h4>' . sprintf(__('BridgeDD is not compatible with phpBB installations listed as %s', 'bridgedd-require'), sprintf($msg, '#b33', __('FAIL', 'bridgedd-require'))) . ' </h4><hr />' . $phpbb_msg . '<br /><br /><a class="button" href="plugins.php">' . sprintf($msg, '#00c;', sprintf(__('&larr; Back to %s'), __('Plugins'))) . '</strong></a></div>', __('BridgeDD Requirement Check', 'bridgedd-require')); } function bridgedd_test_activate() { add_option('bridgedd_test', true); } add_action('plugins_loaded', 'bridgedd_test_run'); register_activation_hook(__FILE__, 'bridgedd_test_activate');